#!/usr/local/sbin/charm-env python3

import sys
from shlex import split
from subprocess import check_output, CalledProcessError, STDOUT

from charmhelpers.core import hookenv
from charms import layer
from charms.reactive import is_flag_set

layer.import_layer_libs()

# start reactive
hookenv._run_atstart()


def fail(msg):
    hookenv.action_fail(msg)
    sys.exit()


if not is_flag_set('charm.docker-registry.configured'):
    fail('Docker Registry charm is not yet ready.')

cmd = ['docker', 'rmi']
options = hookenv.action_get('options')
if options:
    cmd.extend(split(options))
image = hookenv.action_get('image')
if image:
    cmd.extend(split(image))
else:
    fail('No image name(s) specified.')

try:
    r = check_output(cmd, stderr=STDOUT).decode('utf-8')
except CalledProcessError as e:
    fail('"{}" failed with:\n{}'.format(
        ' '.join(e.cmd), e.output.decode('utf-8')))
else:
    hookenv.action_set({'output': r})
