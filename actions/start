#!/usr/local/sbin/charm-env python3

import sys
from subprocess import CalledProcessError

from charmhelpers.core import hookenv
from charms import layer
from charms.reactive import is_flag_set

layer.import_layer_libs()

# start reactive and get our charm config
hookenv._run_atstart()
charm_config = hookenv.config()


def fail(msg):
    hookenv.action_fail(msg)
    sys.exit()


if not is_flag_set('charm.docker-registry.configured'):
    fail('Docker Registry charm is not yet ready.')

name = hookenv.action_get('name')
if not name:
    name = charm_config.get('registry-name', None)

try:
    layer.docker_registry.start_registry(name=name)
except CalledProcessError:
    fail('Failed to start container: {}'.format(name))
else:
    hookenv.action_set({'outcome': 'success'})
    hookenv.status_set('active', '{} container was started.'.format(name))
